version: "3.9"
services:
  zookeeper:
    build:
      dockerfile: DockerFile
    image: wfybelief/component:zookeeper
    env_file:
      - .env
    environment:
      - sys_t1=${ZOOKEEPER_REPLICAS:-1}
      - COMPOSE_SERVICE_NAME=zookeeper
    networks:
      - component-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 110M
        reservations:
          cpus: "0.1"
          memory: 50M
      mode: replicated
      replicas: ${ZOOKEEPER_REPLICAS:-1}
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5

  kafka:
    build:
      dockerfile: DockerFile
    image: wfybelief/component:kafka
    env_file:
      - .env
    environment:
      - sys_t1=${KAFKA_REPLICAS:-1}
      - COMPOSE_SERVICE_NAME=kafka

    networks:
      - component-network
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.1"
          memory: 50M
      mode: replicated
      replicas: ${KAFKA_REPLICAS:-1}
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 5
    depends_on:
      - zookeeper

#  mysql:
#    labels:
#      - "com.example.description=Financial transaction network"
#      - "com.example.department=Finance"
#      - "com.example.label-with-empty-value"
#    image: mysql
#    networks:
#      - component-network
#    environment:
#      - MYSQL_ROOT_PASSWORD=root
#      - COMPOSE_SERVICE_NAME=mysql
#    env_file:
#      - .env
#    depends_on:
#      - zookeeper
#    deploy:
#      resources:
#        limits:
#          cpus: "1.0"
#          memory: 400M
#        reservations:
#          cpus: "0.1"
#          memory: 200M
#      mode: replicated
#      replicas: 1
#      restart_policy:
#        condition: on-failure
#        delay: 30s
#        max_attempts: 5


networks:
  component-network:
    external: false
    name: component-network
    labels:
      - "key=value"

configs:
  test_dir:
    name: "test"
    file: ..
