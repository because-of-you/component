# 第一阶段编译脚本文件
FROM python:3.10.8-slim-bullseye as python

# 元数据
LABEL MAINTAINER="wfy"

# 变量定义区域
ARG  PYTHON_BUILD_PATH=/opt/python/builder/
ARG  PYTHON_BUILD_NAME=builder

# 前置环境准备
RUN sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y binutils && \
    pip install pyinstaller ujson

# 拉取文件
ADD ./$PYTHON_BUILD_NAME.py $PYTHON_BUILD_PATH

# 编译二进制
RUN pyinstaller -F $PYTHON_BUILD_PATH/$PYTHON_BUILD_NAME.py

# 第二阶段运行
FROM openjdk:11-jre-slim-bullseye as jdk

ARG URL=https://mirrors.ustc.edu.cn/apache/kafka/3.1.2/kafka_2.12-3.1.2.tgz
ARG fileName=kafka_2.12-3.1.2.tgz

# 时区
ENV TZ=Asia/Shanghai

# 工作目录
WORKDIR /opt/component/

# 复制二进制
COPY --from=python $PYTHON_BUILD_PATH/dist/$PYTHON_BUILD_NAME ./

# 复制其他文件
ADD ./* ./

# 权限
RUN sed -i 's/deb.debian.org/mirrors.ustc.edu.cn/g' /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y wget && \
    wget $URL && \
    tar -zxvf $fileName && \
    rm $fileName && \
    echo 'export KAFKA_HOME=/opt/component/kafka_2.12-3.1.2/' /etc/profile && \
    echo 'export PATH=$PATH:$KAFKA_HOME/bin' /etc/profile && \
    chmod +x ./entrypoint.sh

# 运行
ENTRYPOINT ["./entrypoint.sh"]
CMD [""]



