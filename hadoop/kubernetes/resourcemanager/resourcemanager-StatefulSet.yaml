# 版本信息
apiVersion: apps/v1

# 类型
kind: StatefulSet

# 元数据
metadata:
  name: resourcemanager
  labels:
    app: resourcemanager

spec:


  # ----------------- 1.多副本策略 -----------------
  replicas: 1
  # 滚动更新
  updateStrategy:
    type: RollingUpdate
  # 最短就绪时间
  minReadySeconds: 10
  # ----------------- 1.多副本策略 -----------------

  serviceName: resourcemanager-service

  # 选择器
  selector:
    matchLabels:
      # 必须匹配 .spec.template.metadata.labels
      app: resourcemanager




  # 模版信息
  template:
    metadata:
      name: resourcemanager
      # 必须匹配 .spec.selector.matchLabels
      labels:
        app: resourcemanager

    spec:
      containers:
        - name: resourcemanager
          image: wfybelief/resourcemanager:latest
          imagePullPolicy: IfNotPresent

          # 资源限制
          resources:
            limits:
              # 2048 / 1
              memory: 4048Mi
            requests:
              memory: 10Mi

          ports:
            - containerPort: 8088
              protocol: TCP
            - containerPort: 19888
              protocol: TCP

          # 存活监测
          #          livenessProbe:
          #            tcpSocket:
          #              port: 2180
          #            initialDelaySeconds: 30
          #            periodSeconds: 10

          volumeMounts:
#            - mountPath: /opt/component/storage/
#              name: resourcemanager-data-storage
#              readOnly: false
            - mountPath: /opt/component/hadoop/etc/hadoop/samples
              name: resourcemanager-config
              readOnly: false

      volumes:
        - name: resourcemanager-config
          configMap:
            name: resourcemanager-configmap
            items:
              - key: core-site.xml
                path: core-site.xml
              - key: hdfs-site.xml
                path: hdfs-site.xml
              - key: mapred-site.xml
                path: mapred-site.xml
              - key: yarn-site.xml
                path: yarn-site.xml

      restartPolicy: Always


  # 持久卷
#  volumeClaimTemplates:
#    - metadata:
#        name: resourcemanager-data-storage
#      spec:
#        accessModes:
#          - ReadWriteOnce
#        # storageClassName: csi-disk-ssd | hostpath
#        resources:
#          requests:
#            storage: 1Gi
#          limits:
#            storage: 1Gi


---
apiVersion: v1
kind: Service
metadata:
  name: resourcemanager-service
  labels:
    app: resourcemanager-service
spec:
  ports:
    - port: 8088
      name: resourcemanager-web
      targetPort: 8088
      protocol: TCP
    - port: 19888
      name: resourcemanager-history-web
      targetPort: 19888
      protocol: TCP

  clusterIP: None
  selector:
    app: resourcemanager

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: resourcemanager-configmap
data:
  core-site.xml: |  
    <configuration>
        <property>
            <name>fs.defaultFS</name>
            <value>hdfs://namenode-service</value>
        </property>
    </configuration>
  hdfs-site.xml: |
    <configuration>
        <property>
            <name>dfs.replication</name>
            <value>2</value>
        </property>
    </configuration>
  mapred-site.xml: |
    <configuration>
        <property>
            <!--指定Mapreduce运行在yarn上-->
            <name>mapreduce.framework.name</name>
            <value>yarn</value>
        </property>
        <property>
          <name>yarn.app.mapreduce.am.env</name>
          <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
        </property>
        <property>
          <name>mapreduce.map.env</name>
          <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
        </property>
        <property>
          <name>mapreduce.reduce.env</name>
          <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
        </property>
        <property>
          <name>yarn.app.mapreduce.am.resource.mb</name>
          <value>300</value>
        </property>
        <property>
            <name>mapreduce.map.memory.mb</name>
            <value>200</value>
        </property>
        <property>
            <name>mapreduce.reduce.memory.mb</name>
            <value>200</value>
        </property>
    </configuration>
  yarn-site.xml: |
    <configuration>
        <property>
            <name>yarn.nodemanager.aux-services</name>
            <value>mapreduce_shuffle</value>
        </property>
    
        <property>
            <name>yarn.scheduler.minimum-allocation-mb</name>
            <value>100</value>
        </property>
    
        <property>
            <name>yarn.scheduler.maximum-allocation-mb</name>
            <value>300</value>
        </property>
    
        <property>
            <name>mapreduce.map.memory.mb</name>
            <value>200</value>
        </property>
      
        <property>
            <name>mapreduce.reduce.memory.mb</name>
            <value>200</value>
        </property>
        <property>
            <name>yarn.nodemanager.resource.memory-mb</name>
            <value>500</value>
        </property>
        
        <property>
          <name>yarn.resourcemanager.address</name>
          <value>resourcemanager-service</value>
        </property>
        <property>
          <name>yarn.resourcemanager.scheduler.address</name>
          <value>resourcemanager-service</value>
        </property>
        <property>
          <name>yarn.resourcemanager.resource-tracker.address</name>
          <value>resourcemanager-service</value>
        </property>
    
    
    </configuration>