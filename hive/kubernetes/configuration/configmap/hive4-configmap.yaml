apiVersion: v1
kind: ConfigMap
metadata:
  name: hive-configmap
data:

  entrypoint.sh: |
    #!/usr/bin/env bash
    
    # 设置环境变量
    HADOOP_HOME=${HADOOP_HOME-"/opt/component/hadoop"}
    HIVE_HOME=${HIVE_HOME-"/opt/component/hive"}
    TEZ_HOME=${TEZ_HOME-"/opt/component/tez"}
    
    cat <<EOF >> /etc/profile
    export HADOOP_HOME=$HADOOP_HOME
    export HIVE_HOME=$HIVE_HOME
    export TEZ_HOME=$TEZ_HOME
    
    export PATH=$PATH:$HADOOP_HOME/bin:$HIVE_HOME/bin
    EOF
    
    cat <<EOF >> /`whoami`/.bashrc
    export HADOOP_HOME=$HADOOP_HOME
    export HIVE_HOME=$HIVE_HOME
    export TEZ_HOME=$TEZ_HOME
    
    export PATH=$PATH:$HADOOP_HOME/bin:$HIVE_HOME/bin
    EOF
    
    source /etc/profile
    
    echo "$@"
    exec "$@"
  

  hive-env.sh: |
    export TEZ_CONF_DIR=${TEZ_HOME}/conf
    export TEZ_JARS=${TEZ_HOME}
    export HADOOP_CLASSPATH=`/opt/component/hadoop/bin/hadoop classpath`
    export HADOOP_CLASSPATH=${TEZ_CONF_DIR}:${TEZ_JARS}/*:${TEZ_JARS}/lib/*

  hive-site.xml: |
    <configuration>
        
        <!-- Hive产生的元数据存放位置-->
        <property>
            <name>hive.metastore.warehouse.dir</name>
            <value>/user/hive/warehouse</value>
        </property>
        
        <property>
            <name>hive.exec.scratchdir</name>
            <value>/user/hive/scratch_dir</value>
        </property>
        
        <property>
            <name>hive.user.install.directory</name>
            <value>/user/hive/install_dir</value>
        </property>    
        
        <!-- https://blog.csdn.net/zhanglong_4444/article/details/106853938  -->
        <property>
            <name>hive.server2.enable.doAs</name>
            <value>true</value>
        </property>
        
        <!-- 数据库连接JDBC的URL地址-->
        <property>
            <name>javax.jdo.option.ConnectionURL</name>
            <value>jdbc:postgresql://postgres-service:5432/default?</value>
        </property>
        
        <!-- 数据库连接driver-->
        <property>
            <name>javax.jdo.option.ConnectionDriverName</name>
            <value>org.postgresql.Driver</value>
        </property>
        
        <!-- 数据库用户名-->
        <property>
            <name>javax.jdo.option.ConnectionUserName</name>
            <value>root</value>
        </property>
        
        <!-- 数据库密码-->
        <property>
            <name>javax.jdo.option.ConnectionPassword</name>
            <value>component</value>
        </property>
        
        <!-- 数据库密码-->
        <property>
          <name>datanucleus.connectionPool.maxPoolSize</name>
          <value>4</value>
        </property> 
        
        <!--  不验证schema  -->
        <property>
            <name>hive.metastore.schema.verification</name>
            <value>true</value>
        </property>
        
        <!--  自己玩可以设置未true  -->
        <property>
            <name>datanucleus.schema.autoCreateAll</name>
            <value>false</value>
        </property>
        
        <property>
            <name>hive.metastore.uris</name>
            <value>thrift://hive-metastore-service:9083</value>
        </property>
        
        <!-- 指定hive server 2连接的host -->
        <property>
            <name>hive.server2.thrift.bind.host</name>
            <value>hive-server-service</value>
        </property>
        
        <!-- 指定hive server 2连接的端口号 -->
        <property>
            <name>hive.server2.thrift.port</name>
            <value>10000</value>
        </property>
        
        <property>
            <name>iceberg.engine.hive.enabled</name>
            <value>true</value>
        </property>
        
        <property>
            <name>hive.execution.engine</name>
            <value>tez</value>
        </property>
        
        <property>
            <name>hive.server2.webui.explain.output</name>
            <value>true</value>
        </property>
        
        <property>
            <name>hive.server2.historic.operation.log.enabled</name>
            <value>true</value>
        </property>
    </configuration>

  tez-site.xml: |
    <configuration>
        <property>
            <name>tez.lib.uris</name>
            <value>${fs.defaultFS}/component/storage/tez/tez-minimal.tar.gz</value>
        </property>
        <property>
            <name>tez.use.cluster.hadoop-libs</name>
            <value>true</value>
        </property>
        <property>
            <description>Enable Tez to use the Timeline Server for History Logging</description>
            <name>tez.history.logging.service.class</name>
            <value>org.apache.tez.dag.history.logging.ats.ATSHistoryLoggingService</value>
        </property>
        <property>
          <description>URL for where the Tez UI is hosted</description>
          <name>tez.tez-ui.history-url.base</name>
          <value>tez-service</value>
        </property>
    </configuration>

  configs.js: |
    /**
     * TEZ 的配置文件 
     * Licensed to the Apache Software Foundation (ASF) under one
     * or more contributor license agreements.  See the NOTICE file
     * distributed with this work for additional information
     * regarding copyright ownership.  The ASF licenses this file
     * to you under the Apache License, Version 2.0 (the
     * "License"); you may not use this file except in compliance
     * with the License.  You may obtain a copy of the License at
     *
     *     http://www.apache.org/licenses/LICENSE-2.0
     *
     * Unless required by applicable law or agreed to in writing, software
     * distributed under the License is distributed on an "AS IS" BASIS,
     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     * See the License for the specific language governing permissions and
     * limitations under the License.
     */

    ENV = {
        hosts: {
            /*
             * Timeline Server Address:
             * By default TEZ UI looks for timeline server at http://localhost:8188, uncomment and change
             * the following value for pointing to a different address.
             */
            //timeline: "http://localhost:8188",
            timeline: "http://timelineserver-service:8188",
            
            /*
             * Resource Manager Address:
             * By default RM REST APIs are expected to be at http://localhost:8088, uncomment and change
             * the following value to point to a different address.
             */
            //rm: "http://localhost:8088",resourcemanager-service
            rm: "http://resourcemanager-service:8088"
            
            /*
             * Resource Manager Web Proxy Address:
             * Optional - By default, value configured as RM host will be taken as proxy address
             * Use this configuration when RM web proxy is configured at a different address than RM.
             */
            //rmProxy: "http://localhost:8088",
        },
        
        /*
         * Time Zone in which dates are displayed in the UI:
         * If not set, local time zone will be used.
         * Refer http://momentjs.com/timezone/docs/ for valid entries.
         */
        //timeZone: "UTC",
        
        /*
         * yarnProtocol:
         * If specified, this protocol would be used to construct node manager log links.
         * Possible values: http, https
         * Default value: If not specified, protocol of hosts.rm will be used
         */
        //yarnProtocol: "<value>",
    };
