# 版本信息
apiVersion: apps/v1

# 类型
kind: StatefulSet

# 元数据
metadata:
  name: hive-server
  labels:
    app: hive-server

spec:


  # ----------------- 1.多副本策略 -----------------
  replicas: 1
  # 滚动更新
  updateStrategy:
    type: RollingUpdate
  # 最短就绪时间
  minReadySeconds: 10
  # ----------------- 1.多副本策略 -----------------

  serviceName: hive-server-service

  # 选择器
  selector:
    matchLabels:
      # 必须匹配 .spec.template.metadata.labels
      app: hive-server




  # 模版信息
  template:
    metadata:
      name: hive-server
      # 必须匹配 .spec.selector.matchLabels
      labels:
        app: hive-server

    spec:
      initContainers:
        - name: hadoop-resource-init
          image: apache/hadoop:3.3.6
          imagePullPolicy: IfNotPresent
          command:
            - cp
            - -r
            - /opt/hadoop
            - /opt/component/
          volumeMounts:
            - mountPath: /opt/component/hadoop
              name: hadoop-resource-dir

        - name: hive-resource-init
          imagePullPolicy: IfNotPresent
          image: apache/hive:4.0.0-beta-2-SNAPSHOT
          command:
            - cp
            - -r
            - /opt/hive
            - /opt/component/
          volumeMounts:
            - mountPath: /opt/component/hive
              name: hive-resource-dir

        - name: postgres-driver-init
          imagePullPolicy: IfNotPresent
          image: busybox:latest
          command:
            - busybox
            - wget
            - -O
            - /opt/component/hive/lib/postgresql.jar
            - https://jdbc.postgresql.org/download/postgresql-42.7.0.jar
          volumeMounts:
            - mountPath: /opt/component/hive
              name: hive-resource-dir

        - name: tez-resource-init
          imagePullPolicy: IfNotPresent
          image: wfybelief/tez:tez_0.10.3_hadoop_3.3.6
          command:
            - busybox
            - cp
            - -r
            - /opt/component/tez/
            - /opt/component/tez/
          volumeMounts:
            - mountPath: /opt/component/tez
              name: tez-resource-dir


      #        - name: iceberg-driver-init
#          imagePullPolicy: IfNotPresent
#          image: busybox:latest
#          command:
#            - busybox
#            - wget
#            - -O
#            - /opt/component/hive/lib/iceberg-hive-runtime.jar
#            - https://maven.aliyun.com/repository/public/org/apache/iceberg/iceberg-hive-runtime/1.4.2/iceberg-hive-runtime-1.4.2.jar
#          volumeMounts:
#            - mountPath: /opt/component/hive
#              name: hive-resource-dir

      containers:
        - name: hive-server
          image: wfybelief/jdk-8:0.0.4
          imagePullPolicy: IfNotPresent
          command:
            - busybox
            - sh
            - entrypoint.sh
          args:
            - ./hive
            - --service
            - hiveserver2
          env:
            - name: HIVE_METASTORE_HADOOP_OPTS
              value: '-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=50.0 -Xshareclasses -Xtune:virtualized -Xquickstart -XX:+UseContainerSupport'
            - name: HIVE_SERVER2_HADOOP_OPTS
              value: '-XX:InitialRAMPercentage=50.0 -XX:MaxRAMPercentage=50.0 -Xshareclasses -Xtune:virtualized -Xquickstart -XX:+UseContainerSupport'
            - name: HADOOP_HOME
              value: '/opt/component/hadoop'
            - name: HIVE_HOME
              value: '/opt/component/hive'
            - name: TEZ_HOME
              value: '/opt/component/tez'

          # 资源限制
          resources:
            limits:
              # 1024 / 3
              memory: 3072Mi
              cpu: 4000m
            requests:
              cpu: 1m
              memory: 10Mi

          volumeMounts:

            # 资源拷贝持久卷
            - name: hadoop-resource-dir
              mountPath: /opt/component/hadoop
            - name: hive-resource-dir
              mountPath: /opt/component/hive
            - name: tez-resource-dir
              mountPath: /opt/component/tez

            # hive配置持久卷
            - mountPath: /opt/component/hive/conf/hive-site.xml
              subPath: hive-site.xml
              name: hive-server-conf
              readOnly: true
            - mountPath: /opt/component/hive/conf/hive-env.sh
              subPath: hive-env.sh
              name: hive-server-conf
              readOnly: true

            # hadoop配置持久卷
            - mountPath: /opt/component/hadoop/etc/hadoop/core-site.xml
              subPath: core-site.xml
              name: hive-server-conf
              readOnly: true
            - mountPath: /opt/component/hadoop/etc/hadoop/hdfs-site.xml
              subPath: hdfs-site.xml
              name: hive-server-conf
              readOnly: true
            - mountPath: /opt/component/hadoop/etc/hadoop/mapred-site.xml
              subPath: mapred-site.xml
              name: hive-server-conf
              readOnly: true
            - mountPath: /opt/component/hadoop/etc/hadoop/yarn-site.xml
              subPath: yarn-site.xml
              name: hive-server-conf
              readOnly: true

            # tez相关配置
            - mountPath: /opt/component/tez/conf/tez-site.xml
              subPath: tez-site.xml
              name: hive-server-conf
              readOnly: true

            # 启动脚本entrypoint.sh持久卷
            - mountPath: /entrypoint.sh
              subPath: entrypoint.sh
              readOnly: true
              name: hive-server-conf

      volumes:
        - name: hive-server-conf
          configMap:
            name: hive-server-configmap
            items:
              - key: hive-site.xml
                path: hive-site.xml
              - key: core-site.xml
                path: core-site.xml
              - key: hdfs-site.xml
                path: hdfs-site.xml
              - key: mapred-site.xml
                path: mapred-site.xml
              - key: yarn-site.xml
                path: yarn-site.xml
              - key: hive-env.sh
                path: hive-env.sh
              - key: entrypoint.sh
                path: entrypoint.sh
              - key: tez-site.xml
                path: tez-site.xml

        # 加载容器共享卷
        - name: hadoop-resource-dir
          emptyDir: { }
        - name: hive-resource-dir
          emptyDir: { }
        - name: tez-resource-dir
          emptyDir: { }

      restartPolicy: Always


---
apiVersion: v1
kind: Service
metadata:
  name: hive-server-service
  labels:
    app: hive-server-service
spec:
  #  ports:
  #    - port: 2181
  #      name: client
  #      targetPort: 2181
  #      protocol: TCP

  clusterIP: None
  selector:
    app: hive-server

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hive-server-configmap
data:
  entrypoint.sh: |
    #!/usr/bin/env bash
    
    cd /opt/component/hive/bin/
    
    # 解压tez
    tar -zxvf /opt/component/tez/tez.tar.gz -C /opt/component/tez/ --strip-components 1
    
    cp /opt/component/hadoop/share/hadoop/client/* /opt/component/tez/lib/
    cp /opt/component/hadoop/share/hadoop/common/* /opt/component/tez/lib/
    cp /opt/component/hadoop/share/hadoop/hdfs/* /opt/component/tez/lib/
    cp /opt/component/hadoop/share/hadoop/mapreduce/* /opt/component/tez/lib/
    cp /opt/component/hadoop/share/hadoop/tools/* /opt/component/tez/lib/
    cp /opt/component/hadoop/share/hadoop/yarn/* /opt/component/tez/lib/
    
    # ./schematool -dbType postgres -initOrUpgradeSchema -verbose
    
    # ./hive --service metastore
    exec "$@"
  hive-env.sh: |
    export HADOOP_HEAPSIZE=1536
    export HADOOP_CLASSPATH=`/opt/component/hadoop/bin/hadoop classpath`
    export TEZ_CONF_DIR=${TEZ_HOME}/conf
    export TEZ_JARS=${TEZ_HOME}
    # export HADOOP_CLASSPATH=${HADOOP_CLASSPATH}:${TEZ_HOME}/conf/:${TEZ_HOME}/*:${TEZ_HOME}/lib/*
    # export HIVE_AUX_JARS_PATH=${TEZ_HOME}/conf:${TEZ_HOME}:${TEZ_HOME}/lib
    # export HADOOP_CLASSPATH=${TEZ_CONF_DIR}:${TEZ_JARS}/*:${TEZ_JARS}/lib/*

  tez-site.xml: |
    <configuration>
        <property>
            <name>tez.lib.uris</name>
            <value>hdfs://namenode-service:8020/component/storage/tez,hdfs://namenode-service:8020/component/storage/tez/lib</value>
        </property>
        <property>
            <name>tez.use.cluster.hadoop-libs</name>
            <value>true</value>
        </property>
    </configuration>
  hive-site.xml: |
    <configuration>
        <!-- Hive产生的元数据存放位置-->
        <property>
            <name>hive.metastore.warehouse.dir</name>
            <value>hdfs://namenode-service:8020/user/hive/warehouse</value>
        </property>
        <!-- 数据库连接JDBC的URL地址-->
        <property>
            <name>javax.jdo.option.ConnectionURL</name>
            <value>jdbc:postgresql://postgres-service:5432/default?createDatabaseIfNotExist=true&amp;useSSL=false&amp;allowPublicKeyRetrieval=true</value>
        </property>
        <!-- 数据库连接driver，即MySQL驱动-->
        <property>
            <name>javax.jdo.option.ConnectionDriverName</name>
            <value>org.postgresql.Driver</value>
        </property>
        <!-- MySQL数据库用户名-->
        <property>
            <name>javax.jdo.option.ConnectionUserName</name>
            <value>root</value>
        </property>
        <!-- MySQL数据库密码-->
        <property>
            <name>javax.jdo.option.ConnectionPassword</name>
            <value>component</value>
        </property>    
        <property>
            <name>hive.metastore.schema.verification</name>
            <value>false</value>
        </property>
        <property>
            <name>datanucleus.schema.autoCreateAll</name>
            <value>true</value>
        </property>
         <property>
            <name>hive.metastore.uris</name>
            <value>thrift://hive-metastore-service:9083</value>
        </property>
        <!-- 指定hive server 2连接的host -->
        <property>
          <name>hive.server2.thrift.bind.host</name>
          <value>hive-server-service</value>
        </property>
        <!-- 指定hive server 2连接的端口号 -->
        <property>
          <name>hive.server2.thrift.port</name>
          <value>10000</value>
        </property>
        <property>
            <name>iceberg.engine.hive.enabled</name>
            <value>true</value>
        </property>
        <property>
            <name>hive.execution.engine</name>
            <value>mr</value>
        </property>
        <!-- 暂时注释
        <property>
            <name>hive.server2.active.passive.ha.enable</name>
            <value>true</value>
        </property>    
        <property>
            <name>datanucleus.autoCreateSchema</name>
            <value>true</value>
        </property>
        <property>
            <name>datanucleus.autoCreateTables</name>
            <value>true</value>
        </property>
        <property>
            <name>datanucleus.autoCreateColumns</name>
            <value>true</value>
        </property>
        <property>
            <name>hive.metastore.schema.verification</name>
            <value>false</value>
        </property>
        <property>
            <name>datanucleus.schema.autoCreateAll</name>
            <value>true</value>
        </property>
        使用本地服务连接Hive,默认为true
        <property>
            <name>hive.metastore.local</name>
            <value>false</value>
        </property>
        连接服务器
        <property>
            <name>hive.metastore.uris</name>
            <value>thrift://localhost:9083</value>
        </property>
        -->
    </configuration>

  core-site.xml: |
    <configuration>
        <property>
            <name>fs.defaultFS</name>
            <value>hdfs://namenode-service</value>
        </property>
        <property>
            <name>hadoop.proxyuser.root.hosts</name>
            <value>*</value>
        </property>
        <property>
            <name>hadoop.proxyuser.root.groups</name>
            <value>*</value>
        </property>
    </configuration>
  hdfs-site.xml: |
    <configuration>
        <property>
            <name>dfs.replication</name>
            <value>2</value>
        </property>
    </configuration>
  mapred-site.xml: |
    <configuration>
        <property>
            <!--指定Mapreduce运行在yarn上-->
            <name>mapreduce.framework.name</name>
            <value>yarn</value>
        </property>
        <property>
            <name>yarn.app.mapreduce.am.env</name>
            <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
        </property>
        <property>
            <name>mapreduce.map.env</name>
            <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
        </property>
        <property>
            <name>mapreduce.reduce.env</name>
            <value>HADOOP_MAPRED_HOME=${HADOOP_HOME}</value>
        </property>
        <property>
            <name>mapreduce.map.memory.mb</name>
            <value>1024</value>
        </property>
        <property>
            <name>mapreduce.map.java.opts</name>
            <value>-Xms819m -Xmx819m</value>
        </property>
        <property>
            <name>mapreduce.reduce.memory.mb</name>
            <value>2048</value>
        </property>
        <property>
            <name>mapreduce.reduce.java.opts</name>
            <value>-Xms1638m -Xmx1638m</value>
        </property>
    </configuration>
  yarn-site.xml: |
    <configuration>
        <property>
            <name>yarn.nodemanager.aux-services</name>
            <value>mapreduce_shuffle</value>
        </property>

        <property>
            <name>yarn.resourcemanager.hostname</name>
            <value>resourcemanager-service</value>
        </property>

        <property>
            <name>yarn.scheduler.minimum-allocation-mb</name>
            <value>1024</value>
        </property>

        <property>
            <name>yarn.scheduler.maximum-allocation-mb</name>
            <value>3072</value>
        </property>

        <property>
            <name>yarn.app.mapreduce.am.resource.mb</name>
            <value>2048</value>
        </property>
        
        <property>
            <name>arn.app.mapreduce.am.command-opts</name>
            <value>-Xms1638m -Xmx1638m</value>
        </property>
        
        <property>
            <name>yarn.nodemanager.resource.memory-mb</name>
            <value>3072</value>
        </property>

        <property>
            <name>yarn.resourcemanager.address</name>
            <value>resourcemanager-service</value>
        </property>

        <property>
            <name>yarn.resourcemanager.scheduler.address</name>
            <value>resourcemanager-service</value>
        </property>

        <property>
            <name>yarn.resourcemanager.resource-tracker.address</name>
            <value>resourcemanager-service</value>
        </property>

    </configuration>