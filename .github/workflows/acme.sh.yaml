# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# uni项目一体式构建方案
name: acme.sh

on:
  push:
    branches: [ "main" ]
    #    paths-ignore:
    #      - README.md
    #      - .github/workflows/*
    #      - docs/*
    #    tags:
    #      - "v*.*.*"
    # pull_request:
    # branches: [ "dev" ]
    # 每天 的 一点 凌晨 调度运行
    #    schedule:
    #      - cron: '0 1 * * *'

env:
  REGISTRY: docker.io

jobs:

  acme-sh-code-build-job:
    if: contains( 'acme.sh' ,  'acme.sh')
    runs-on: ubuntu-latest

    steps:
      - name: component
        uses: actions/checkout@v4

      - name: acme.sh
        uses: actions/checkout@v4
        with:
          repository: acmesh-official/acme.sh
          ref: master
          path: acme.sh

      # docker 镜像管理模块 ------> 加载docker镜像元数据管理服务
      - name: docker meta manager service
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/acme.sh

      # docker 镜像管理模块 ------> 加载docker登陆服务
      - name: docker login service
        uses: docker/login-action@v2
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          registry: ${{ env.REGISTRY }}

      # docker 镜像管理模块 ------> 加载docker 多平台镜像构建服务
      - name: docker build x service
        uses: docker/setup-buildx-action@v2

      # docker 镜像管理模块 ------> 构建和推送最新的镜像 ,linux/arm64
      - name: docker build and push service
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: images/acme.sh/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: wfybelief/acme.sh:0.0.1
          labels: ${{ steps.meta.outputs.labels }}